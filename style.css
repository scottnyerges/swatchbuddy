
/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

/* BASIC ARCHITECTURE STYLE */

.item-a{
  grid-area: SBlogo;
/*  background-color: #000000;*/
/*  border-style: solid;
  border-color: black;
  border-width: 10px;
  border-radius: 20px;*/
  width: 290px;
}

.item-b{
  grid-area: SBgraphic;
/*  background-color: #000000;
*//*  border-style: solid;
  border-color: black;
  border-width: 10px;
  border-radius: 20px;*/
  width: 290px;
}


.container{
  display: grid;
  margin: auto;
  height: 100%;
  width: 90%;
  justify-items: center;
  grid-gap: 5px;
  padding: 10px;
  padding-top: 150px;
/*  border-style: solid;
  border-color: black;
  border-width: 1px;
  border-radius: 25px;*/
  grid-template-areas: 
                      "SBlogo"
                      "SBgraphic"
}

.column {
  font-family: 'Comfortaa', cursive;
font-size: 14px;
}

body {
/*padding: 5px;*/
font-family: 'Comfortaa', cursive;
font-size: 18px;
color: black;
}

a {
  text-decoration: none;
}

#typeStyle {
  font-size: 28px;
  text-align: center;
}

#imgStyle {
  max-width: 100%;
  text-align: center
}


/* FADES */

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:0.5s;
  -moz-animation-duration:0.5s;
  animation-duration: 0.5s;
}

.fade-in.one {
  -webkit-animation-delay: 0.5s;
  -moz-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

